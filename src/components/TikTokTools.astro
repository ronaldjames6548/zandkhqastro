---
// TikTokTools.astro - Complete TikTok Tools Component
---

<div class="min-h-screen bg-gray-100 py-12">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-800 mb-4">TikTok Tools</h1>
      <p class="text-lg text-gray-600">Download videos, explore profiles, and search content</p>
    </div>
    
    <!-- Tab Navigation -->
    <div x-data="{ activeTab: 'download' }" class="max-w-6xl mx-auto">
      <div class="flex flex-wrap justify-center mb-8 bg-white rounded-lg shadow-sm p-2">
        <button 
          @click="activeTab = 'download'" 
          :class="activeTab === 'download' ? 'bg-blue-500 text-white' : 'text-gray-600 hover:text-blue-500'"
          class="px-4 py-2 rounded-md transition-colors duration-200 mr-2 mb-2"
        >
          Download
        </button>
        <button 
          @click="activeTab = 'profile'" 
          :class="activeTab === 'profile' ? 'bg-purple-500 text-white' : 'text-gray-600 hover:text-purple-500'"
          class="px-4 py-2 rounded-md transition-colors duration-200 mr-2 mb-2"
        >
          Profile
        </button>
        <button 
          @click="activeTab = 'search'" 
          :class="activeTab === 'search' ? 'bg-green-500 text-white' : 'text-gray-600 hover:text-green-500'"
          class="px-4 py-2 rounded-md transition-colors duration-200 mr-2 mb-2"
        >
          Search
        </button>
        <button 
          @click="activeTab = 'comments'" 
          :class="activeTab === 'comments' ? 'bg-orange-500 text-white' : 'text-gray-600 hover:text-orange-500'"
          class="px-4 py-2 rounded-md transition-colors duration-200 mr-2 mb-2"
        >
          Comments
        </button>
        <button 
          @click="activeTab = 'posts'" 
          :class="activeTab === 'posts' ? 'bg-indigo-500 text-white' : 'text-gray-600 hover:text-indigo-500'"
          class="px-4 py-2 rounded-md transition-colors duration-200 mr-2 mb-2"
        >
          User Posts
        </button>
      </div>

      <!-- Download Tab -->
      <div x-show="activeTab === 'download'" x-data="tiktokDownloader()" class="bg-white rounded-lg shadow-lg p-6">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Download TikTok Content</h2>
        
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">TikTok URL</label>
            <input
              type="url"
              x-model="url"
              placeholder="https://www.tiktok.com/@username/video/..."
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">API Version</label>
            <select x-model="version" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500">
              <option value="v1">Version 1</option>
              <option value="v2">Version 2</option>
              <option value="v3">Version 3</option>
            </select>
          </div>

          <button
            @click="downloadVideo()"
            :disabled="loading || !url"
            class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:opacity-50"
          >
            <span x-show="!loading">Download</span>
            <span x-show="loading">Processing...</span>
          </button>

          <div x-show="error" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded" x-text="error"></div>

          <div x-show="result && result.result" class="bg-green-100 border border-green-400 p-4 rounded">
            <h3 class="font-semibold mb-2">Download Ready!</h3>
            <p class="mb-2" x-text="result.result.desc"></p>
            
            <!-- Video Downloads -->
            <template x-if="result.result.video">
              <div class="mb-4">
                <h4 class="font-medium mb-2">Video Downloads:</h4>
                <template x-for="link in result.result.video.downloadAddr">
                  <a :href="link" target="_blank" class="block text-blue-600 hover:underline mb-1">Download Video</a>
                </template>
              </div>
            </template>
            
            <!-- Images -->
            <template x-if="result.result.images">
              <div class="mb-4">
                <h4 class="font-medium mb-2">Images:</h4>
                <template x-for="(image, index) in result.result.images">
                  <a :href="image" target="_blank" class="block text-blue-600 hover:underline mb-1" x-text="`Image ${index + 1}`"></a>
                </template>
              </div>
            </template>

            <!-- Music -->
            <template x-if="result.result.music">
              <div>
                <h4 class="font-medium mb-2">Music:</h4>
                <template x-for="musicLink in result.result.music.playUrl">
                  <a :href="musicLink" target="_blank" class="block text-blue-600 hover:underline mb-1">Download Music</a>
                </template>
              </div>
            </template>
          </div>
        </div>
      </div>

      <!-- Profile Tab -->
      <div x-show="activeTab === 'profile'" x-data="tiktokProfile()" class="bg-white rounded-lg shadow-lg p-6">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">TikTok Profile Viewer</h2>
        
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Username (without @)</label>
            <input
              type="text"
              x-model="username"
              placeholder="username"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-purple-500 focus:border-purple-500"
            />
          </div>

          <button
            @click="getProfile()"
            :disabled="loading || !username"
            class="w-full bg-purple-600 text-white py-2 px-4 rounded-md hover:bg-purple-700 disabled:opacity-50"
          >
            <span x-show="!loading">Get Profile</span>
            <span x-show="loading">Loading...</span>
          </button>

          <div x-show="error" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded" x-text="error"></div>

          <div x-show="profile && profile.result" class="bg-gray-100 border p-4 rounded">
            <div class="flex items-center space-x-4 mb-4">
              <img :src="profile.result.user.avatar" :alt="profile.result.user.nickname" class="w-16 h-16 rounded-full" />
              <div>
                <h3 class="text-lg font-semibold" x-text="profile.result.user.nickname"></h3>
                <p class="text-gray-600" x-text="'@' + profile.result.user.username"></p>
                <span x-show="profile.result.user.verified" class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">Verified</span>
              </div>
            </div>
            
            <p class="text-gray-700 mb-4" x-text="profile.result.user.signature"></p>
            
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-center">
              <div>
                <p class="text-2xl font-bold" x-text="profile.result.stats.followerCount.toLocaleString()"></p>
                <p class="text-sm text-gray-600">Followers</p>
              </div>
              <div>
                <p class="text-2xl font-bold" x-text="profile.result.stats.followingCount.toLocaleString()"></p>
                <p class="text-sm text-gray-600">Following</p>
              </div>
              <div>
                <p class="text-2xl font-bold" x-text="profile.result.stats.heartCount.toLocaleString()"></p>
                <p class="text-sm text-gray-600">Likes</p>
              </div>
              <div>
                <p class="text-2xl font-bold" x-text="profile.result.stats.videoCount.toLocaleString()"></p>
                <p class="text-sm text-gray-600">Videos</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Search Tab -->
      <div x-show="activeTab === 'search'" x-data="tiktokSearch()" class="bg-white rounded-lg shadow-lg p-6">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Search TikTok</h2>
        
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Search Query</label>
            <input
              type="text"
              x-model="query"
              placeholder="Enter search term..."
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-green-500 focus:border-green-500"
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Search Type</label>
            <select x-model="type" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-green-500 focus:border-green-500">
              <option value="user">Users</option>
              <option value="live">Live Streams</option>
              <option value="video">Videos</option>
            </select>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Cookie (Optional, required for some searches)</label>
            <input
              type="text"
              x-model="cookie"
              placeholder="TikTok cookie..."
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-green-500 focus:border-green-500"
            />
          </div>

          <button
            @click="search()"
            :disabled="loading || !query"
            class="w-full bg-green-600 text-white py-2 px-4 rounded-md hover:bg-green-700 disabled:opacity-50"
          >
            <span x-show="!loading">Search</span>
            <span x-show="loading">Searching...</span>
          </button>

          <div x-show="error" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded" x-text="error"></div>

          <div x-show="results && results.result && results.result.length > 0" class="space-y-4">
            <h3 class="font-semibold">Search Results:</h3>
            <template x-for="item in results.result" :key="item.id || item.uid">
              <div class="border p-4 rounded bg-gray-50">
                <!-- User Results -->
                <template x-if="type === 'user'">
                  <div class="flex items-center space-x-3">
                    <img :src="item.avatarThumb" :alt="item.nickname" class="w-12 h-12 rounded-full" />
                    <div>
                      <h4 class="font-medium" x-text="item.nickname"></h4>
                      <p class="text-sm text-gray-600" x-text="'@' + item.username"></p>
                      <p class="text-sm text-gray-500" x-text="item.followerCount.toLocaleString() + ' followers'"></p>
                    </div>
                  </div>
                </template>
                
                <!-- Video Results -->
                <template x-if="type === 'video'">
                  <div>
                    <h4 class="font-medium mb-2" x-text="item.desc"></h4>
                    <p class="text-sm text-gray-600" x-text="'By @' + item.author.uniqueId"></p>
                    <p class="text-sm text-gray-500" x-text="item.stats.playCount.toLocaleString() + ' views'"></p>
                  </div>
                </template>
                
                <!-- Live Results -->
                <template x-if="type === 'live'">
                  <div>
                    <h4 class="font-medium mb-2" x-text="item.title"></h4>
                    <p class="text-sm text-gray-600" x-text="'By ' + item.owner.nickname"></p>
                    <p class="text-sm text-gray-500" x-text="item.stats.viewerCount.toLocaleString() + ' viewers'"></p>
                  </div>
                </template>
              </div>
            </template>
          </div>
        </div>
      </div>

      <!-- Comments Tab -->
      <div x-show="activeTab === 'comments'" x-data="tiktokComments()" class="bg-white rounded-lg shadow-lg p-6">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Get Video Comments</h2>
        
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Video URL</label>
            <input
              type="url"
              x-model="url"
              placeholder="https://www.tiktok.com/@username/video/..."
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-orange-500 focus:border-orange-500"
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Comment Limit</label>
            <input
              type="number"
              x-model="commentLimit"
              min="1"
              max="100"
              value="30"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-orange-500 focus:border-orange-500"
            />
          </div>

          <button
            @click="getComments()"
            :disabled="loading || !url"
            class="w-full bg-orange-600 text-white py-2 px-4 rounded-md hover:bg-orange-700 disabled:opacity-50"
          >
            <span x-show="!loading">Get Comments</span>
            <span x-show="loading">Loading...</span>
          </button>

          <div x-show="error" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded" x-text="error"></div>

          <div x-show="comments && comments.result" class="space-y-4">
            <h3 class="font-semibold">Comments:</h3>
            <template x-for="comment in comments.result" :key="comment.cid">
              <div class="border p-4 rounded bg-gray-50">
                <div class="flex items-start space-x-3">
                  <div class="flex-1">
                    <h4 class="font-medium text-sm" x-text="comment.user.nickname"></h4>
                    <p class="text-gray-700 mt-1" x-text="comment.text"></p>
                    <p class="text-sm text-gray-500 mt-2" x-text="comment.likeCount + ' likes'"></p>
                  </div>
                </div>
              </div>
            </template>
          </div>
        </div>
      </div>

      <!-- User Posts Tab -->
      <div x-show="activeTab === 'posts'" x-data="tiktokPosts()" class="bg-white rounded-lg shadow-lg p-6">
        <h2 class="text-2xl font-bold text-gray-800 mb-6">Get User Posts</h2>
        
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Username</label>
            <input
              type="text"
              x-model="username"
              placeholder="username"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500"
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Post Limit</label>
            <input
              type="number"
              x-model="postLimit"
              min="1"
              max="50"
              value="30"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500"
            />
          </div>

          <button
            @click="getPosts()"
            :disabled="loading || !username"
            class="w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 disabled:opacity-50"
          >
            <span x-show="!loading">Get Posts</span>
            <span x-show="loading">Loading...</span>
          </button>

          <div x-show="error" class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded" x-text="error"></div>

          <div x-show="posts && posts.result" class="space-y-4">
            <h3 class="font-semibold">Recent Posts:</h3>
            <template x-for="post in posts.result" :key="post.id">
              <div class="border p-4 rounded bg-gray-50">
                <p class="text-gray-700 mb-2" x-text="post.desc"></p>
                <div class="text-sm text-gray-500 space-x-4">
                  <span x-text="post.stats.playCount.toLocaleString() + ' views'"></span>
                  <span x-text="post.stats.likeCount.toLocaleString() + ' likes'"></span>
                  <span x-text="post.stats.commentCount.toLocaleString() + ' comments'"></span>
                </div>
              </div>
            </template>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Unified API call function
  async function callTikTokAPI(action, data) {
    const response = await fetch('/api/tiktok', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ action, ...data })
    });
    return await response.json();
  }

  // Download functionality
  function tiktokDownloader() {
    return {
      url: '',
      version: 'v1',
      loading: false,
      error: '',
      result: null,

      async downloadVideo() {
        if (!this.url) {
          this.error = 'Please enter a TikTok URL';
          return;
        }

        this.loading = true;
        this.error = '';
        this.result = null;

        try {
          const data = await callTikTokAPI('download', {
            url: this.url,
            version: this.version
          });

          if (data.success) {
            this.result = data.data;
          } else {
            this.error = data.error || 'Failed to download video';
          }
        } catch (error) {
          this.error = 'Network error occurred';
        } finally {
          this.loading = false;
        }
      }
    }
  }

  // Profile functionality
  function tiktokProfile() {
    return {
      username: '',
      loading: false,
      error: '',
      profile: null,

      async getProfile() {
        if (!this.username) {
          this.error = 'Please enter a username';
          return;
        }

        this.loading = true;
        this.error = '';
        this.profile = null;

        try {
          const data = await callTikTokAPI('profile', {
            username: this.username
          });

          if (data.success) {
            this.profile = data.data;
          } else {
            this.error = data.error || 'Failed to fetch profile';
          }
        } catch (error) {
          this.error = 'Network error occurred';
        } finally {
          this.loading = false;
        }
      }
    }
  }

  // Search functionality
  function tiktokSearch() {
    return {
      query: '',
      type: 'user',
      cookie: '',
      loading: false,
      error: '',
      results: null,

      async search() {
        if (!this.query) {
          this.error = 'Please enter a search query';
          return;
        }

        this.loading = true;
        this.error = '';
        this.results = null;

        try {
          const data = await callTikTokAPI('search', {
            query: this.query,
            type: this.type,
            cookie: this.cookie || undefined
          });

          if (data.success) {
            this.results = data.data;
          } else {
            this.error = data.error || 'Failed to search';
          }
        } catch (error) {
          this.error = 'Network error occurred';
        } finally {
          this.loading = false;
        }
      }
    }
  }

  // Comments functionality
  function tiktokComments() {
    return {
      url: '',
      commentLimit: 30,
      loading: false,
      error: '',
      comments: null,

      async getComments() {
        if (!this.url) {
          this.error = 'Please enter a video URL';
          return;
        }

        this.loading = true;
        this.error = '';
        this.comments = null;

        try {
          const data = await callTikTokAPI('comments', {
            url: this.url,
            commentLimit: parseInt(this.commentLimit)
          });

          if (data.success) {
            this.comments = data.data;
          } else {
            this.error = data.error || 'Failed to fetch comments';
          }
        } catch (error) {
          this.error = 'Network error occurred';
        } finally {
          this.loading = false;
        }
      }
    }
  }

  // Posts functionality
  function tiktokPosts() {
    return {
      username: '',
      postLimit: 30,
      loading: false,
      error: '',
      posts: null,

      async getPosts() {
        if (!this.username) {
          this.error = 'Please enter a username';
          return;
        }

        this.loading = true;
        this.error = '';
        this.posts = null;

        try {
          const data = await callTikTokAPI('posts', {
            username: this.username,
            postLimit: parseInt(this.postLimit)
          });

          if (data.success) {
            this.posts = data.data;
          } else {
            this.error = data.error || 'Failed to fetch posts';
          }
        } catch (error) {
          this.error = 'Network error occurred';
        } finally {
          this.loading = false;
        }
      }
    }
  }
</script>